services:
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    command: ["redis-server"]

  postgres:
    container_name: subscriptions_db
    image: postgres:13.3
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: user
      POSTGRES_DB: subscriptions
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    container_name: subscriptions_api
    build: .
    environment:
      POSTGRES_HOST: subscriptions_db
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      WEATHER_MAP_API: ${WEATHER_MAP_API}
      WEATHER_STACK_KEY: ${WEATHER_STACK_KEY}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/build
    ports:
      - "8000:8000"
    command: "./api"

volumes:
  pgdata:
